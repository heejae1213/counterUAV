Tracking pedestrians for self driving cars
(link: )

1. Self Driving Car
	- 자율 주행을 위해 위치 및 주변 움직이는 물체의 상태 탐지가 필요함.
	- 일정한 시간 간격을 두고 정확한 탐지가 요구됨.
	- Google에서 Extended Kalman Filter를 적용하여 개발 중에 있음.
	- 현재 측정값만 가지고 계산하는 것보다 정확함.
	
2. Extended Kalman Filter
	- non-linear version of Kalman Filter
	- Kalman Filter에 선형화 알고리즘을 적용한다. 
	
3. Kalman Filter
	- discrete real time interval에서 측정되는, noise가 있는 데이터로부터 dynamic system의 미지의 상태 변수를 최적으로 추정하기 위한 선형 재귀 알고리즘.
	- 특징 
		* 물체 측정값에 확률적 오차를 포함. 
		* 이전 측정값과 현재 측정값에 선형적인 관계가 있음. 
	- 역할: 움직이는 보행자의 위치와 속도를 시간에 따라 추적할 수 있음.
	
4. Sensors of Self Driving Car
	- LIDAR(LIght Detection And Ranging)
		* 길 가장자리 탐지 
	- RADAR sensors
		* 전방 물체 탐지 
		* 앞 차와의 간격 자동 유지, 운전자가 정한 속도 유지.
	- Video camera
		* 신호등 및 표지판 읽기. 
		* 다른 이동수단 및 보행자, 장애물 탐지.
	- Computer
		* 차의 모든 센서 정보를 분석
		* 도로 규칙 이해 (formal/informal)
		* 분석을 통해 가속/정지/유지 중 어떤 상태를 채택한 것인지 판단. 
	- Ultrasonic sensors 
		* 가까이 있는 물체의 위치를 탐지함.
		* 주차, 커브 돌 때.
	- Signals from GPS
		* 자동차 엔진 회전 속도계, 고도계, 평형측정계 등에서 얻은 정보를 종합하여 차의 위치를 알아냄.
		
5. LIDAR vs. RADAR
	- LIDAR
		* 레이저 사용
		* point cloud를 생성함 
		* 20m~40m 근처에 있는 물체를 매우 높은 정확도로 탐지.
		* 날씨와 센서 상태(오염정도)의 영향을 받음.
		
	- RADAR
		* 위치와 속도 추정값 제공 가능.
		* ~200m 정도 떨어진 물체 탐지 가능. 
		* 날씨 조건에 영향을 받음.
		
6. Kalman Filter Algorithm
	(0) Initialize Step
		- 보행자의 상태를 4차원 벡터로 가짐
		- (pos_x pos_y vel_x vel_y)
		
	(1) Prediction Step
		- 현재 측정값을 기반으로 보행자가 다음 축정 시간에 어디에 위치할지 예측함.
		- 현재 속도와 위치를 기반으로 현재 속도를 유지하며 움직인다고 가정.
			* vx' = vx
			* px' = px + vx * dt
		
	(2) Update Step
		센서 데이터를 이용해 estimate를 update
		두 단계 무한 반복 
		
		